PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
--CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
--INSERT INTO django_migrations VALUES(1,'contenttypes','0001_initial','2024-02-04 04:09:25.557573');
--INSERT INTO django_migrations VALUES(2,'auth','0001_initial','2024-02-04 04:09:25.840012');
--INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2024-02-04 04:09:25.957425');
--INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2024-02-04 04:09:26.029412');
--INSERT INTO django_migrations VALUES(5,'admin','0003_logentry_add_action_flag_choices','2024-02-04 04:09:26.096593');
--INSERT INTO django_migrations VALUES(6,'contenttypes','0002_remove_content_type_name','2024-02-04 04:09:26.515331');
--INSERT INTO django_migrations VALUES(7,'auth','0002_alter_permission_name_max_length','2024-02-04 04:09:26.613156');
--INSERT INTO django_migrations VALUES(8,'auth','0003_alter_user_email_max_length','2024-02-04 04:09:26.752224');
--INSERT INTO django_migrations VALUES(9,'auth','0004_alter_user_username_opts','2024-02-04 04:09:26.857929');
--INSERT INTO django_migrations VALUES(10,'auth','0005_alter_user_last_login_null','2024-02-04 04:09:26.956470');
--INSERT INTO django_migrations VALUES(11,'auth','0006_require_contenttypes_0002','2024-02-04 04:09:27.039387');
--INSERT INTO django_migrations VALUES(12,'auth','0007_alter_validators_add_error_messages','2024-02-04 04:09:27.170574');
--INSERT INTO django_migrations VALUES(13,'auth','0008_alter_user_username_max_length','2024-02-04 04:09:27.246403');
--INSERT INTO django_migrations VALUES(14,'auth','0009_alter_user_last_name_max_length','2024-02-04 04:09:27.318396');
--INSERT INTO django_migrations VALUES(15,'auth','0010_alter_group_name_max_length','2024-02-04 04:09:27.374711');
--INSERT INTO django_migrations VALUES(16,'auth','0011_update_proxy_permissions','2024-02-04 04:09:27.454284');
--INSERT INTO django_migrations VALUES(17,'auth','0012_alter_user_first_name_max_length','2024-02-04 04:09:27.506773');
--INSERT INTO django_migrations VALUES(18,'sessions','0001_initial','2024-02-04 04:09:27.623362');
--INSERT INTO django_migrations VALUES(19,'blog','0001_initial','2024-02-07 09:47:14.522651');
--INSERT INTO django_migrations VALUES(20,'users','0001_initial','2024-02-10 02:22:03.982502');
--INSERT INTO django_migrations VALUES(21,'blog','0002_blog_category_post_category','2024-05-30 17:33:46.059768');
--INSERT INTO django_migrations VALUES(22,'blog','0003_alter_post_category','2024-05-30 17:45:50.445225');
--INSERT INTO django_migrations VALUES(23,'blog','0004_post_image','2024-05-31 07:18:42.634646');
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_groups" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_user_user_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_time" datetime NOT NULL);
INSERT INTO django_admin_log VALUES(1,'2','afh2',1,'[{"added": {}}]',4,1,'2024-02-07 09:43:45.921939');
INSERT INTO django_admin_log VALUES(2,'3','afh3',1,'[{"added": {}}]',4,1,'2024-02-07 09:44:15.943129');
INSERT INTO django_admin_log VALUES(3,'1','afhossain Profile',1,'[{"added": {}}]',8,1,'2024-02-10 03:15:27.528809');
INSERT INTO django_admin_log VALUES(4,'2','afh2 Profile',1,'[{"added": {}}]',8,1,'2024-02-10 03:15:52.618258');
INSERT INTO django_admin_log VALUES(5,'3','afh3 Profile',1,'[{"added": {}}]',8,1,'2024-02-10 03:24:59.564071');
INSERT INTO django_admin_log VALUES(6,'2','afh2 Profile',3,'',8,1,'2024-02-10 03:27:11.800130');
INSERT INTO django_admin_log VALUES(7,'1','afhossain Profile',3,'',8,1,'2024-02-10 03:27:11.994796');
INSERT INTO django_admin_log VALUES(8,'4','afhossain Profile',1,'[{"added": {}}]',8,1,'2024-02-10 03:27:25.503319');
INSERT INTO django_admin_log VALUES(9,'5','afh2 Profile',1,'[{"added": {}}]',8,1,'2024-02-10 03:27:32.893467');
INSERT INTO django_admin_log VALUES(10,'4','afhossain Profile',2,'[{"changed": {"fields": ["Image"]}}]',8,1,'2024-02-10 05:25:44.360795');
INSERT INTO django_admin_log VALUES(11,'5','afh2 Profile',2,'[{"changed": {"fields": ["Image"]}}]',8,1,'2024-02-10 05:31:22.421611');
INSERT INTO django_admin_log VALUES(12,'5','afh2 Profile',3,'',8,1,'2024-02-10 05:36:56.626104');
INSERT INTO django_admin_log VALUES(13,'4','afhossain Profile',3,'',8,1,'2024-02-10 05:36:56.688926');
INSERT INTO django_admin_log VALUES(14,'3','afh3 Profile',3,'',8,1,'2024-02-10 05:36:56.740032');
INSERT INTO django_admin_log VALUES(15,'6','afh2 Profile',1,'[{"added": {}}]',8,1,'2024-02-10 05:37:59.444976');
INSERT INTO django_admin_log VALUES(16,'7','afhossain Profile',1,'[{"added": {}}]',8,1,'2024-02-10 05:38:10.883964');
INSERT INTO django_admin_log VALUES(17,'9','afh3 Profile',1,'[{"added": {}}]',8,1,'2024-02-12 05:03:53.713224');
INSERT INTO django_admin_log VALUES(18,'1','Tech',1,'[{"added": {}}]',9,1,'2024-05-30 17:42:04.695525');
INSERT INTO django_admin_log VALUES(19,'2','Business',1,'[{"added": {}}]',9,1,'2024-05-30 17:43:00.762731');
INSERT INTO django_admin_log VALUES(20,'3','Politics',1,'[{"added": {}}]',9,1,'2024-05-30 17:43:06.557948');
INSERT INTO django_admin_log VALUES(21,'4','Life Style',1,'[{"added": {}}]',9,1,'2024-05-30 17:43:15.350079');
INSERT INTO django_admin_log VALUES(22,'10','bohemian decor items to enhance your home',1,'[{"added": {}}]',7,1,'2024-05-30 17:48:15.828092');
INSERT INTO django_admin_log VALUES(23,'11','Django Application Monitoring | Tutorial, Tools, Tips',2,'[{"changed": {"fields": ["Title", "Image", "Content"]}}]',7,1,'2024-05-31 08:02:51.044156');
INSERT INTO django_admin_log VALUES(24,'10','bohemian decor items to enhance your home',2,'[{"changed": {"fields": ["Image"]}}]',7,1,'2024-05-31 08:15:44.256900');
INSERT INTO django_admin_log VALUES(25,'9','my Late night Post',3,'',7,1,'2024-05-31 08:35:11.652954');
INSERT INTO django_admin_log VALUES(26,'6','post 10',3,'',7,1,'2024-05-31 08:35:12.416288');
INSERT INTO django_admin_log VALUES(27,'5','dfdf',3,'',7,1,'2024-05-31 08:35:12.592562');
INSERT INTO django_admin_log VALUES(28,'3','my blog 3',3,'',7,1,'2024-05-31 08:35:12.709310');
INSERT INTO django_admin_log VALUES(29,'2','my blog 2',3,'',7,1,'2024-05-31 08:35:12.925040');
INSERT INTO django_admin_log VALUES(30,'12','A walk around Vienna',1,'[{"added": {}}]',7,1,'2024-05-31 08:42:48.409676');
INSERT INTO django_admin_log VALUES(31,'5','Travel & Tourism',1,'[{"added": {}}]',9,1,'2024-06-04 04:33:41.848968');
--CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
--INSERT INTO django_content_type VALUES(1,'admin','logentry');
--INSERT INTO django_content_type VALUES(2,'auth','permission');
--INSERT INTO django_content_type VALUES(3,'auth','group');
--INSERT INTO django_content_type VALUES(4,'auth','user');
--INSERT INTO django_content_type VALUES(5,'contenttypes','contenttype');
--INSERT INTO django_content_type VALUES(6,'sessions','session');
--INSERT INTO django_content_type VALUES(7,'blog','post');
--INSERT INTO django_content_type VALUES(8,'users','profile');
--INSERT INTO django_content_type VALUES(9,'blog','blog_category');
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(6,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(7,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(8,2,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(9,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(10,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(11,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(12,3,'view_group','Can view group');
INSERT INTO auth_permission VALUES(13,4,'add_user','Can add user');
INSERT INTO auth_permission VALUES(14,4,'change_user','Can change user');
INSERT INTO auth_permission VALUES(15,4,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(16,4,'view_user','Can view user');
INSERT INTO auth_permission VALUES(17,5,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(18,5,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(19,5,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(20,5,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(21,6,'add_session','Can add session');
INSERT INTO auth_permission VALUES(22,6,'change_session','Can change session');
INSERT INTO auth_permission VALUES(23,6,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(24,6,'view_session','Can view session');
INSERT INTO auth_permission VALUES(25,7,'add_post','Can add post');
INSERT INTO auth_permission VALUES(26,7,'change_post','Can change post');
INSERT INTO auth_permission VALUES(27,7,'delete_post','Can delete post');
INSERT INTO auth_permission VALUES(28,7,'view_post','Can view post');
INSERT INTO auth_permission VALUES(29,8,'add_profile','Can add profile');
INSERT INTO auth_permission VALUES(30,8,'change_profile','Can change profile');
INSERT INTO auth_permission VALUES(31,8,'delete_profile','Can delete profile');
INSERT INTO auth_permission VALUES(32,8,'view_profile','Can view profile');
INSERT INTO auth_permission VALUES(33,9,'add_blog_category','Can add blog_ category');
INSERT INTO auth_permission VALUES(34,9,'change_blog_category','Can change blog_ category');
INSERT INTO auth_permission VALUES(35,9,'delete_blog_category','Can delete blog_ category');
INSERT INTO auth_permission VALUES(36,9,'view_blog_category','Can view blog_ category');
--CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
--INSERT INTO auth_group VALUES(1,'');
--CREATE TABLE IF NOT EXISTS "auth_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "is_superuser" bool NOT NULL, "username" varchar(150) NOT NULL UNIQUE, "last_name" varchar(150) NOT NULL, "email" varchar(254) NOT NULL, "is_staff" bool NOT NULL, "is_active" bool NOT NULL, "date_joined" datetime NOT NULL, "first_name" varchar(150) NOT NULL);
--INSERT INTO auth_user VALUES(1,'pbkdf2_sha256$720000$IZvJnuU790XdI5zSDTW6i0$y751RRfNQ9TkucZufK9urEjslaTiFCcXNeL0LTBIF+Y=','2024-06-04 04:34:35.129981',1,'afhossain','','afhossain@gmail.com',1,1,'2024-02-07 01:55:48.127467','');
--INSERT INTO auth_user VALUES(2,'pbkdf2_sha256$720000$ZMvQCLI84XdQJxhaXs30Zj$2WSVbFtKd1kFCNm7X71FXTfKIkHlKqz97KvX27UOnfs=','2024-05-31 09:49:11.251678',0,'afh2','','',0,1,'2024-02-07 09:43:42.887413','');
--INSERT INTO auth_user VALUES(3,'pbkdf2_sha256$720000$7rrS3KjeidKbdyt3BHvq9b$8p21we4YbthCyjPCROLGJDK5TyK0t8zeuF/mLKh71Ys=','2024-02-10 03:26:15.408668',0,'afh3','','',0,1,'2024-02-07 09:44:13.684895','');
--INSERT INTO auth_user VALUES(4,'pbkdf2_sha256$720000$RV4vSDq8jkfyLnW7euVfa0$vtAPc3YmVPn3m2IM2J3AA3I6LQdTqnlfcDkOYwieFgM=',NULL,0,'afh4','','',0,1,'2024-02-07 15:43:56.724644','');
--INSERT INTO auth_user VALUES(5,'pbkdf2_sha256$720000$fdCHW8rbbdMMBvoYKd21AR$eW0xmR+rqvk5zXWrNypODiPXl5nPtH1yEbngBzUAH4Y=',NULL,0,'afh5','','',0,1,'2024-02-07 15:52:33.875697','');
--INSERT INTO auth_user VALUES(6,'pbkdf2_sha256$720000$VOPOhw5OBFOj04jzsJdOsn$3hx3EWWrU0QWZWs0aZHd2v0o7yerX0A9cqYNkUuj4G0=',NULL,0,'afh6','','',0,1,'2024-02-07 15:56:58.745492','');
--INSERT INTO auth_user VALUES(7,'pbkdf2_sha256$720000$ygH6lRtvEhFIVDSHbz7Q2z$UX3XkQdO5EgXML4bzlHWMnDNMdmWUY5Ef0l10jLSdXk=',NULL,0,'afh7','','',0,1,'2024-02-07 15:59:08.224867','');
--INSERT INTO auth_user VALUES(8,'pbkdf2_sha256$720000$WUHyFbVDQKkDqbKDekvi3g$XhsgATA/5WRDrcDkhI/lbYUipr6wDfEladT/GCjAZSI=','2024-02-08 05:39:42.714615',0,'afh8','','afrina.freelancer@gmail.com',0,1,'2024-02-07 16:13:16.520134','');
--INSERT INTO auth_user VALUES(9,'pbkdf2_sha256$720000$zGk6cBEwz1PpMC2sBeO65t$hN1lmj9FOmwOgFAOEp0wdgc6Fq1TxtcUnmIWNJjECVc=','2024-02-08 05:44:22.048006',0,'afh9','','afrina.freelancer@gmail.com',0,1,'2024-02-07 16:25:45.072498','');
--INSERT INTO auth_user VALUES(10,'pbkdf2_sha256$720000$nwoNslZLIp54u0dsxYEXd2$lVfKzUyyBPADtMO7nMl3oNSmCK4+KgFtqRKmCL1s56U=',NULL,0,'afh10','','afrina.freelancer@gmail.com',0,1,'2024-02-12 01:34:48.061540','');
--INSERT INTO auth_user VALUES(11,'pbkdf2_sha256$720000$bRm1N3eNuLJkkC05pcAKXD$Xn5dXgBcIwNlXwkXYPxbE6LcSZDjy/K5p+0TjrH9mUQ=',NULL,0,'afh11','','afrina.freelancer@gmail.com',0,1,'2024-02-12 01:37:35.767529','');
--INSERT INTO auth_user VALUES(12,'pbkdf2_sha256$720000$JIUWoKM6SsohrQhDXsbfXl$ztf6CfCe/UnO7Od0zDKcjfDD7jHdqmMFOtbSqw59odA=','2024-02-12 01:39:13.887791',0,'afh13','','afrina.freelancer3@gmail.com',0,1,'2024-02-12 01:39:04.449529','');
--INSERT INTO auth_user VALUES(13,'pbkdf2_sha256$720000$yk4vRMV6aII1wD4sDxhW0j$07wqeKUoHNzkgx2Nh+bHCnlYFIcfNJHsWFjCF9JokJw=',NULL,0,'john','','john@gmail.com',0,1,'2024-05-31 10:33:19.349120','');
--INSERT INTO auth_user VALUES(14,'pbkdf2_sha256$720000$GiCNKqOxapKG6gbHwYzWAM$1qyp2WyeKc2X1GEaAIYtaMjV6Z8LnZihi4i8KZ5pW/s=',NULL,0,'Mack','','Mack@gmail.com',0,1,'2024-05-31 10:38:00.533887','');
--INSERT INTO auth_user VALUES(15,'pbkdf2_sha256$720000$I7lveaRWXIn0rBBYOQUO5q$0xAG0ALDcoF8s+J/UlkebtbLYkl1saUNMj+9tyCuOEw=','2024-05-31 11:00:21.777535',0,'Angel','','Angel@gmail.com',0,1,'2024-05-31 10:44:35.968642','');
--INSERT INTO auth_user VALUES(16,'pbkdf2_sha256$720000$q0qM3o9RZE5vyJCE6JmTax$SciyJWXg2kD85Da6tPLIRAhZsXaqmZkXKd5z9NW9+Ok=','2024-06-10 05:21:23.738950',0,'ruby','','ruby@gmail.com',0,1,'2024-05-31 11:12:06.118006','');
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
--CREATE TABLE IF NOT EXISTS "users_profile" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "image" varchar(100) NOT NULL, "user_id" integer NOT NULL UNIQUE REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED);
--INSERT INTO users_profile VALUES(6,'profile_pics/287579238_418626666808135_2072112241613850208_n.jpg',2);
--INSERT INTO users_profile VALUES(7,'profile_pics/287561950_418626743474794_6133454786038140990_n.jpg',1);
--INSERT INTO users_profile VALUES(8,'profile_pics/287561950_418626743474794_6133454786038140990_n_0nD5nl1.jpg',12);
--INSERT INTO users_profile VALUES(9,'profile_pics/287579238_418626666808135_2072112241613850208_n_kZV1VUW.jpg',3);
--INSERT INTO users_profile VALUES(10,'default.jpg',14);
--INSERT INTO users_profile VALUES(11,'profile_pics/angel.jpg',15);
--INSERT INTO users_profile VALUES(12,'default.jpg',16);
--CREATE TABLE IF NOT EXISTS "blog_blog_category" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL);
--INSERT INTO blog_blog_category VALUES(1,'Tech');
--INSERT INTO blog_blog_category VALUES(2,'Business');
--INSERT INTO blog_blog_category VALUES(3,'Politics');
--INSERT INTO blog_blog_category VALUES(4,'Life Style');
--INSERT INTO blog_blog_category VALUES(5,'Travel & Tourism');
----CREATE TABLE IF NOT EXISTS "blog_post" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(100) NOT NULL, "content" text NOT NULL, "date_posted" datetime NOT NULL, "author_id" integer NOT NULL REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED, "category_id" bigint NOT NULL REFERENCES "blog_blog_category" ("id") DEFERRABLE INITIALLY DEFERRED, "image" varchar(100) NOT NULL);
----INSERT INTO blog_post VALUES(10,'bohemian decor items to enhance your home','Bohemian style, or boho for short, is more than just a trend; it’s a way of life. It embodies a free-spirited approach to design, celebrating a mix of cultures, textures and colours. If you are looking to create a warm, inviting and aesthetically pleasing space that reflects your individuality, then look no further than boho decor.The beauty of boho lies in its lack of rigidity. It encourages you to embrace personal expression and tell your story through your surroundings. In this article find 10 key decor items to transform your home into a bohemian haven.','2024-05-30 17:46:11',1,4,'blog_pics/boho.jpg');
----INSERT INTO blog_post VALUES(11,'Django Application Monitoring | Tutorial, Tools, Tips and Trics',replace(replace('Modern online applications are loosely coupled to provide flexibility and fault tolerance. However, this implies that numerous pieces of software are working together to run the application. Various data points from multiple application parts must be collected and monitored to ensure the application’s best efficiency and performance. This is known as Application Performance Management or Application Performance Monitoring (APM).\r\n\r\nAPM describes the process of examining application performance, availability, and user experience and then using this data to find and fix application issues before they impact customers. Monitoring applications is an essential step for understanding how applications can be scaled down to save money or scaled up to meet demand, as well as knowing when they are available and when they fail.\r\n\r\nDjango, based on the Model-View-Controller architecture, allows for the ease of building, publishing, and regularly maintaining applications. Monitoring a Django web application is crucial for developers who want to expedite the development lifecycle and accommodate code audits. A good Django monitoring solution can automate application performance monitoring, simplify metrics tracking and reporting, visualize application bottlenecks, and speed up the debugging process. Furthermore, good Django monitoring can assist developers in understanding and quickly resolving application performance issues caused by web server overload, databases, or network bandwidth.\r\n\r\nIn this article, you’ll learn how to best monitor Django applications, including some best practices and recommended tools to use.\r\n\r\nNote: This article is meant for Django developers and software engineers who want to implement monitoring efficiently. Thus, a prior understanding of Django development is necessary to proceed.','\r',char(13)),'\n',char(10)),'2024-05-31 07:23:26',1,4,'blog_pics/django_Znj4Szu.jpg');
----INSERT INTO blog_post VALUES(12,'A walk around Vienna',replace(replace('Whilst staying in Bratislava we seized the opportunity of spending a day in Vienna as the two capitals are located close together.  To get there we took a CityLink train from Bratislava central station (standard tickets €14 return).  Surprisingly there were no ticket machines on the station concourse resulting in a lengthy queue at the ticket office.  Luckily, we discovered more counters upstairs that people seemed unaware of so we were able to buy our tickets from there and skip the queues.\r\n\r\nThe journey took just 65 minutes and it seemed no time at all before we were walking out of the Vienna Hauptbahnhof.  The first place we wished to visit was Belvedere Palace around 15 minutes away.  Belvedere is a UNESCO World Heritage Site comprising of two Baroque buildings and French inspired formal gardens laid out in a symmetrical design.','\r',char(13)),'\n',char(10)),'2024-05-31 08:42:18',1,4,'blog_pics/vienna.jpg');
----INSERT INTO blog_post VALUES(13,'Exploring Singapore',replace(replace('After quickly showering and unpacking we headed back out into town taking the MRT to City Hall station.  From there we walked to the iconic Raffles Hotel, named after Sir Stamford Raffles who founded Singapore and established the East India Company in 1819.\r\n\r\nWhilst there, we looked in the famous Long Bar where Singapore Sling cocktails set you back $29 each.   I loved the colonial style of Raffles with its tall palms and large rattan cooling fans.\r\n\r\nNext it was time to eat,  so we studied our map and walked along to the Esplanade where we found Makansutra/ Gluttons Bay Hawker Stall.\r\n\r\nThis is an outdoor food court seating 550 people with 12 food stalls offering a large range of street food from chilli crabs to noodles.  In one corner there is a kiosk selling drinks to accompany the food.  As it was a Saturday evening it was really crowded but eventually we managed to find two seats.  Tables are large, shared ones but everyone we met was very friendly and it was fun sharing experiences with locals and fellow travellers.  In fact, we struck up a conversation with two off duty BA flight attendants who told us that they always tried to eat at Gluttons Bay on their stopovers.   I went to order some food,  we kept it simple on our first night with dishes of  Chicken Fried Rice and Nasi Goreng, two Roti Canai (delicious flatbread) and a bottle of Tiger beer each.','\r',char(13)),'\n',char(10)),'2024-05-31 08:58:21.697905',1,4,'blog_pics/singapore.jpg');
----INSERT INTO blog_post VALUES(14,'What is the future of solar power in 2024 and beyond?',replace(replace('The power of the sun in the palms of our hands…\r\n\r\nSolar panels, with their gleaming plated surfaces and their mind-bending ability to create electricity from seemingly nothing, have always seemed to cross that threshold between reality and science fiction.\r\n\r\nThis is a technology that makes us feel that the future is already upon us, and yet, even as shimmering solar farms and sun-powered water heaters rise up across the landscape, we have taken only our first steps on our journey into a hopeful green future.\r\n\r\nIn 2023 solar power produced 413 gigawatts of energy, far exceeding any previous record for solar energy production. In 2024, that number is only going to increase as this market grows to become the dominant energy infrastructure on the planet.\r\n\r\nSo let''s get into it, what does the future hold for the burgeoning solar industry?','\r',char(13)),'\n',char(10)),'2024-05-31 09:56:00.413337',2,1,'blog_pics/solar.jpg');
----INSERT INTO blog_post VALUES(15,'Youth at the Forefront of Climate Action in North Macedonia',replace(replace('In an era defined by urgent environmental crises, the collective power of youth is a beacon of hope for combating climate change. Through a multifaceted approach including activism, solutions-based competitions, and research, USAID’s Youth Actively Create Opportunities (YACO) Activity empowers young people in North Macedonia to take proactive measures against the impacts of climate change. The YACO Activity encourages youth to channel their passions and creativity towards tangible solutions for our planet''s future. Involving youth in development programs is vital to driving meaningful change and inspiring global action.\r\n\r\nYouth-led Creative Activism\r\nIn ten municipalities in North Macedonia, the impacts of climate change are propelling participants of the Activity’s Youth Engagement Clubs to develop creative ways to raise awareness of these impacts within their communities.\r\n\r\nFor example, in November 2023, student Milena Peshevskachose to express her creativity in a giant interactive cube on a technical college campus in Skopje. Each side of the cube contained one thought-provoking activity: a wall of mirrors with the message, "You are a reflection of the environment"; space for young people to leave messages, recommendations, and advice for contributing to and caring for the environment; and two sides for artistic expression via creating a mosaic from recycled waste and spray painting.','\r',char(13)),'\n',char(10)),'2024-05-31 10:47:57.330468',15,4,'blog_pics/globalwarming.jpg');
----INSERT INTO blog_post VALUES(16,'Overview of Django Authentication and Authorization',replace(replace('Django, being a high-level battery-included Python framework, comes with an authentication system.\r\n\r\nThis authentication system is collectively referred to as the authentication and authorization system. That means, we can use the built-in Django authentication system to handle both authentication (user identification) and authorization (permissions).\r\n\r\nThe following are the components or models of the built-in authentication system that can be used to implement RBAC:\r\n\r\nUser: This models the users of an application.\r\nGroup: This models a group of users in an application. That is, users can be categorized into various groups. For our implementation of RBAC, we’ll use this model (group model) for roles.\r\nPermission: This models the actions users can perform within the application, enabling precise control over access rights.\r\nWe’ll explore more on each of these components in the walkthrough section.\r\n\r\nWalkthrough of Implementation of RBAC\r\nSimple Case Study\r\nLet’s implement RBAC for a School Management System in order to explore the implementation of RBAC.\r\n\r\nThe following roles should exist in the system:\r\n\r\nStudent - can view his own record\r\nTeacher - can create, update, view, and delete student records.\r\nPrincipal - can create, read, update, and delete users and has all permissions on student records.\r\nIn this case study, the resource or data we’ll mainly be restricting access to is the Student Assessment record.\r\n\r\nUser, Group, and Permission\r\nAs mentioned earlier, the authentication system provides a User model. It’s important to know that the authentication system is bundled as an application in django.contrib.auth. This application contains the core functionality and the necessary models needed.\r\n\r\nThe authentication system is available by default in every project created using the django-admin startproject command. In as much as django.contrib.auth exists in INSTALLED_APPS constants in a project’s settings.py file.\r\n\r\nRunning the command python manage.py migrate will create the tables for the default database models. Hence, the user, group, and permission will now be available.\r\n\r\nNote: There is a many-to-many relationship between the user and permission and also between the group and permission.\r\n\r\nDjango Admin Site\r\nIn order to create objects interactively, let’s create a super user that can access the Django admin dashboard.\r\n\r\nRun the command python manage.py createsuperuser\r\nGo to http://127.0.0.1:8000/admin/ and log in.\r\n\r\nThe article is avaiable at the link https://permify.co/post/rbac-in-django/#overview-of-django-authentication-and-authorization','\r',char(13)),'\n',char(10)),'2024-06-04 04:32:22.329566',1,1,'blog_pics/djangoAuth.jpg');
----INSERT INTO blog_post VALUES(17,'Role-Based Access Control (RBAC)',replace(replace('Role-Based Access Control (RBAC) is a security approach used to restrict system access to authorized users based on their roles within an organization. It simplifies the management of user permissions by grouping them into roles, rather than assigning permissions to individuals directly. Here’s a detailed explanation of RBAC:\r\n\r\nKey Concepts of RBAC\r\nRoles:\r\n\r\nA role is a collection of permissions that define what actions a user in that role can perform. Examples include roles like ''Administrator'', ''Editor'', ''Viewer'', etc.\r\nRoles are typically aligned with job functions or responsibilities within an organization.\r\nPermissions:\r\n\r\nPermissions specify the allowable actions on resources, such as ''read'', ''write'', ''delete'', or ''execute''.\r\nThese permissions are assigned to roles.\r\nUsers:\r\n\r\nUsers are individuals who access the system. In RBAC, users are assigned to roles, and through these roles, they inherit the permissions assigned to those roles.\r\nSessions:\r\n\r\nA session is a mapping between a user and an active role. During a session, a user can activate one or more roles they have been assigned to perform tasks.\r\nHow RBAC Works\r\nRole Assignment:\r\n\r\nUsers are assigned one or more roles based on their job functions, responsibilities, or other criteria.\r\nFor example, an employee in the HR department might be assigned the ''HR Manager'' role.\r\nRole Authorization:\r\n\r\nUsers can only be assigned to roles for which they have authorization.\r\nThis ensures that roles are assigned in a controlled manner, maintaining security and compliance.\r\nPermission Assignment:\r\n\r\nEach role is assigned specific permissions that define what actions users in that role can perform on system resources.\r\nFor example, the ''HR Manager'' role might have permissions to ''view employee records'', ''edit employee details'', and ''generate reports''.\r\nRole Activation and Deactivation:\r\n\r\nUsers can activate or deactivate roles during their session as needed.\r\nThis allows users to dynamically assume the necessary roles to perform their tasks.\r\nBenefits of RBAC\r\nSimplified Management:\r\n\r\nManaging permissions through roles simplifies the administrative process, as permissions are granted and revoked at the role level rather than the individual level.\r\nEnhanced Security:\r\n\r\nBy assigning roles based on job responsibilities, organizations can enforce the principle of least privilege, ensuring users only have access to the resources they need.\r\nScalability:\r\n\r\nRBAC is highly scalable, making it suitable for both small organizations and large enterprises with complex access control requirements.\r\nCompliance:\r\n\r\nRBAC helps organizations comply with regulatory requirements by providing a clear structure for managing and auditing user permissions.\r\nImplementation Steps\r\nIdentify Roles:\r\n\r\nDefine roles based on job functions and organizational needs.\r\nDefine Permissions:\r\n\r\nDetermine the permissions required for each role.\r\nAssign Users to Roles:\r\n\r\nMap users to appropriate roles based on their responsibilities.\r\nMonitor and Review:\r\n\r\nRegularly review role assignments and permissions to ensure they remain aligned with organizational changes and security policies.\r\nExample Scenario\r\nIn a healthcare organization, the following roles and permissions might be defined:\r\n\r\nDoctor:\r\nPermissions: View patient records, write prescriptions, order tests.\r\nNurse:\r\nPermissions: View patient records, update patient status, administer medication.\r\nReceptionist:\r\nPermissions: Schedule appointments, update patient contact information.\r\nBy assigning users to these roles, the healthcare organization ensures that each employee has the appropriate access needed to perform their duties without exposing sensitive information unnecessarily.\r\n\r\nIn conclusion, RBAC is a powerful and flexible access control model that enhances security and simplifies the management of user permissions within an organization.','\r',char(13)),'\n',char(10)),'2024-06-04 04:58:48.038427',16,1,'blog_pics/RBAC_in_Django.jpeg');
----INSERT INTO blog_post VALUES(19,'Level Of Access Control: Middleware Vs Decorator',replace(replace('A common question that plagues developers:“Where do I put my permission check, decorator or middleware?”. To answer this question, you just need to know if your access control rule is global or specific to a few views.\r\nFor instance, imagine you have two access control rules. The first states that all the users accessing the application must have “view_blog” permission. As per the second rule, only a user having a permission “can_publish_blog” can publish a blog.\r\nIn the second case, you can add the check as a decorator to the”publish_blog” view.\r\nIn case of former, you will put that check in your middleware as it applies to all your URLs. A user who does not have this permission cannot enter your application. Even if you add it as a decorator, the views are safe.\r\nBut adding the decorator to every view of your application would be cumbersome. If a new developer forgets to add the decorator to a view he wrote, the rule gets violated.\r\nTherefore, you should check any permission that’s valid globally in the middleware.','\r',char(13)),'\n',char(10)),'2024-06-04 05:10:32.459812',16,1,'blog_pics/django_middleware.jpeg');
----INSERT INTO blog_post VALUES(20,'Naming Convention on Variable Name and View Name in Django',replace(replace('In Django, following consistent naming conventions is crucial for maintaining readable, manageable, and scalable code. Here are some recommended practices for naming variables and views:\r\n\r\nVariable Naming Conventions\r\nGeneral Variables:\r\n\r\nUse snake_case for variable names.\r\nBe descriptive but concise.\r\nExample: user_profile, total_count, is_active.\r\nModel Field Variables:\r\n\r\nFollow snake_case.\r\nEnsure they are meaningful and reflect the data they store.\r\nExample: first_name, date_of_birth, email_address.\r\nConstants:\r\n\r\nUse UPPERCASE with underscores to separate words.\r\nExample: MAX_UPLOAD_SIZE, DEFAULT_TIMEOUT.\r\nClass Names:\r\n\r\nUse CamelCase.\r\nTypically end with a type descriptor if appropriate (e.g., UserProfile, OrderItem).\r\nFunction/Method Names:\r\n\r\nUse snake_case.\r\nVerb-based names for methods that perform actions.\r\nExample: get_user_data, calculate_total, send_email.\r\nView Naming Conventions\r\nFunction-Based Views (FBV):\r\n\r\nUse snake_case.\r\nUsually end with _view to clearly indicate their purpose.\r\nExample: user_list_view, order_detail_view, create_product_view.\r\nClass-Based Views (CBV):\r\n\r\nUse CamelCase.\r\nTypically named after what they do or represent, often ending with View.\r\nExample: UserListView, OrderDetailView, CreateProductView.\r\nURL Patterns:\r\n\r\nUse snake_case.\r\nReflect the purpose of the view they are routing to.\r\nExample: path(''user/list/'', views.user_list_view, name=''user_list''), path(''order/<int:id>/'', views.order_detail_view, name=''order_detail'').\r\n\r\n\r\nAdditional Tips\r\nTemplates Naming: Use meaningful, descriptive names reflecting the content or purpose. Example: user_list.html, order_detail.html.\r\nStatic Files: Organize CSS, JS, and image files in directories named according to their type and purpose. Example: css/styles.css, js/main.js, images/logo.png.\r\nAvoid Abbreviations: Unless they are universally understood, avoid using abbreviations that can make the code harder to read and understand.\r\nBy adhering to these conventions, you ensure your Django project''s code is clean, understandable, and maintainable.','\r',char(13)),'\n',char(10)),'2024-06-05 04:26:45.332345',16,1,'blog_pics/python_variable_names.jpeg');
--INSERT INTO blog_post VALUES(21,'Compelling Project Proposal to Convince an Investor',replace(replace('Creating a compelling project proposal to convince an investor requires a clear, concise, and persuasive presentation of your business idea. Here’s a structured approach you can use to draft your proposal:\r\n\r\n1. Executive Summary\r\nObjective: Provide a snapshot of your business idea, summarizing the key points.\r\nContent:\r\nBusiness name and location\r\nBrief description of the product/service\r\nMarket opportunity\r\nUnique selling proposition (USP)\r\nFunding amount needed and its purpose\r\n2. Company Overview\r\nObjective: Introduce your company and its mission.\r\nContent:\r\nCompany history and background\r\nVision and mission statements\r\nCore values\r\nBusiness structure and ownership\r\n3. Market Analysis\r\nObjective: Show that you understand the market and the demand for your product/service.\r\nContent:\r\nMarket size and growth potential\r\nTarget audience demographics\r\nMarket trends and insights\r\nCompetitor analysis\r\n4. Product or Service Description\r\nObjective: Describe what you are offering and how it benefits your customers.\r\nContent:\r\nDetailed description of the product/service\r\nKey features and benefits\r\nDevelopment stage (e.g., concept, prototype, fully operational)\r\nIntellectual property (patents, trademarks)\r\n5. Business Model\r\nObjective: Explain how your business will make money.\r\nContent:\r\nRevenue model (e.g., sales, subscriptions, licensing)\r\nPricing strategy\r\nSales and distribution channels\r\nCustomer acquisition and retention strategies\r\n6. Marketing and Sales Strategy\r\nObjective: Outline your plan to attract and retain customers.\r\nContent:\r\nMarketing plan (online/offline)\r\nBranding strategy\r\nSales strategy\r\nPartnerships and collaborations\r\nAdvertising and promotion plans\r\n7. Operational Plan\r\nObjective: Describe how your business will operate on a day-to-day basis.\r\nContent:\r\nKey activities and processes\r\nLocation and facilities\r\nTechnology and equipment\r\nSupply chain management\r\nStaffing plan\r\n8. Management Team\r\nObjective: Introduce your team and their qualifications.\r\nContent:\r\nProfiles of key team members\r\nRelevant experience and expertise\r\nOrganizational structure\r\nAdvisory board (if applicable)\r\n9. Financial Plan\r\nObjective: Provide a detailed financial forecast to demonstrate profitability and sustainability.\r\nContent:\r\nRevenue projections\r\nProfit and loss statements\r\nCash flow statements\r\nBalance sheets\r\nBreak-even analysis\r\nFunding requirements and allocation\r\n10. Risk Analysis\r\nObjective: Address potential risks and how you plan to mitigate them.\r\nContent:\r\nIdentification of major risks (market, financial, operational)\r\nRisk mitigation strategies\r\nContingency plans\r\n11. Funding Request\r\nObjective: Specify the amount of funding you need and how it will be used.\r\nContent:\r\nDetailed breakdown of funding requirements\r\nHow the funds will be utilized\r\nEquity offer or repayment plan\r\nExpected ROI for investors\r\n12. Appendices\r\nObjective: Provide additional supporting documents.\r\nContent:\r\nResumes of key team members\r\nDetailed market research data\r\nProduct photos or prototypes\r\nLegal documents (e.g., incorporation, patents)\r\nExample Proposal Outline\r\nExecutive Summary\r\nOur company, EcoGadgets Inc., is dedicated to creating eco-friendly gadgets that enhance everyday living. We are seeking $500,000 to launch our flagship product, the SolarSmart Watch, which combines solar charging technology with smart features, targeting a growing market of environmentally conscious consumers.\r\n\r\nCompany Overview\r\nFounded in 2022, EcoGadgets Inc. aims to revolutionize the tech industry by integrating sustainable practices into product development. Our mission is to provide innovative, eco-friendly solutions that reduce the carbon footprint of everyday technology use.\r\n\r\nMarket Analysis\r\nThe global smart wearables market is projected to reach $50 billion by 2027, driven by increasing consumer awareness of sustainability. Our primary target market includes tech-savvy, eco-conscious individuals aged 18-45.\r\n\r\nProduct Description\r\nThe SolarSmart Watch features solar panels integrated into the strap, offering indefinite battery life under sunlight. It includes fitness tracking, notifications, and a sleek design, setting it apart from traditional smartwatches.\r\n\r\nBusiness Model\r\nWe will generate revenue through direct sales on our website and partnerships with eco-friendly retailers. Our pricing strategy positions the SolarSmart Watch competitively at $199, with a 40% profit margin.\r\n\r\nMarketing and Sales Strategy\r\nOur marketing efforts will focus on digital advertising, influencer partnerships, and participation in tech and sustainability expos. We plan to utilize social media and content marketing to build a loyal customer base.\r\n\r\nOperational Plan\r\nWe will operate from our headquarters in San Francisco, with manufacturing outsourced to a certified eco-friendly facility. Our team will oversee quality control, supply chain management, and customer support.\r\n\r\nManagement Team\r\nOur team includes experienced professionals in tech development, marketing, and sustainability:\r\n\r\nJohn Doe, CEO: 10 years in tech startups\r\nJane Smith, CTO: 8 years in wearable technology\r\nEmily Johnson, CMO: 7 years in digital marketing\r\nFinancial Plan\r\nWe project revenues of $2 million in the first year, with a net profit margin of 20%. The attached financial statements provide detailed forecasts for the next three years.\r\n\r\nRisk Analysis\r\nKey risks include market acceptance and supply chain disruptions. We will mitigate these through extensive market research and diversified supplier relationships.\r\n\r\nFunding Request\r\nWe are seeking $500,000 in exchange for 15% equity. Funds will be allocated to product development, marketing, and initial inventory. Investors can expect a 25% ROI within three years.\r\n\r\nAppendices\r\n\r\nTeam resumes\r\nMarket research data\r\nProduct prototype images\r\nLegal documents\r\nBy presenting a well-structured and thorough proposal, you can effectively communicate your business vision and convince investors of its potential for success.','\r',char(13)),'\n',char(10)),'2024-06-05 04:34:33.256858',16,2,'blog_pics/proposal_writing.jpeg');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',23);
INSERT INTO sqlite_sequence VALUES('django_admin_log',31);
INSERT INTO sqlite_sequence VALUES('django_content_type',9);
INSERT INTO sqlite_sequence VALUES('auth_permission',36);
INSERT INTO sqlite_sequence VALUES('auth_group',1);
INSERT INTO sqlite_sequence VALUES('auth_user',16);
INSERT INTO sqlite_sequence VALUES('users_profile',12);
INSERT INTO sqlite_sequence VALUES('blog_blog_category',5);
INSERT INTO sqlite_sequence VALUES('blog_post',21);
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_user_groups_user_id_group_id_94350c0c_uniq" ON "auth_user_groups" ("user_id", "group_id");
CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id");
CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id");
CREATE UNIQUE INDEX "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" ON "auth_user_user_permissions" ("user_id", "permission_id");
CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id");
CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id");
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "blog_post_author_id_dd7a8485" ON "blog_post" ("author_id");
CREATE INDEX "blog_post_category_id_c326dbf8" ON "blog_post" ("category_id");
COMMIT;
